name: Patch upstream

on:
  workflow_dispatch:
  schedule:
    - cron: "30 7 * * 1"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get-release-tags:
    runs-on: ubuntu-latest
    outputs:
      upstream_release: ${{ steps.upstream-release.outputs.upstream_release }}
      local_release: ${{ steps.local-release.outputs.local_release }}
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Get latest upstream release
        id: upstream-release
        shell: bash
        run: |
          latest_release=$(gh release list --limit 1 -R linkwarden/linkwarden | awk '{ print $1 }')
          echo "upstream_release=${latest_release}" >> "$GITHUB_OUTPUT"
          echo "upstream_release=${latest_release}"

      - name: Get latest local release
        id: local-release
        shell: bash
        run: |
          local_release=$(gh release list --limit 1 -R chrisbsmith/linkwarden | awk '{ print $1 }')
          echo "local_release=${local_release}" >> "$GITHUB_OUTPUT"
          echo "local_release=${local_release}"

  tag-and-release:
    if: needs.get-release-tags.outputs.upstream_release != needs.get-release-tags.outputs.local_release
    runs-on: ubuntu-latest
    needs:
      - get-release-tags
    env:
      ref: ${{ needs.get-release-tags.outputs.upstream_release }}
    steps:
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.ref }}',
              sha: context.sha
            })
      - name: Create Release
        shell: bash
        run: |
          gh release create ${{ env.ref }}


