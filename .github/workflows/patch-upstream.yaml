name: Patch upstream

on:
  push:
    branches:
      - patch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get-release-tags:
    runs-on: ubuntu-latest
    outputs:
      upstream_release: ${{ steps.upstream-release.outputs.upstream_release }}
      local_tag: ${{ steps.local-tag.outputs.local_tag }}
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Get latest upstream release
        id: upstream-release
        shell: bash
        run: |
          latest_release=$(gh release list --limit 1 -R linkwarden/linkwarden | awk '{ print $1 }')
          echo "upstream_release=${latest_release}" >> "$GITHUB_OUTPUT"
          echo "upstream_release=${latest_release}"

      - name: Get latest local tag
        id: local-tag
        shell: bash
        run: |
          local_tag=$(gh release list --limit 1 -R chrisbsmith/linkwarden | awk '{ print $1 }')
          echo "local_tag=${local_tag}" >> "$GITHUB_OUTPUT"
          echo "local_tag=${local_tag}"

  checkout-upstream-and-build:
    if: needs.get-release-tags.outputs.upstream_release != needs.get-release-tags.outputs.local_tag
    runs-on: ubuntu-latest
    needs:
      - get-release-tags
    env:
      ref: ${{ needs.get-release-tags.outputs.upstream_release }}
    steps:
      - name: Checkout local repo
        uses: actions/checkout@v4
        with:
          ref: patch
          path: patch

      - name: Clone upstream Linkwarden repo
        uses: actions/checkout@v4
        with:
          repository: linkwarden/linkwarden
          ref: ${{env.ref}}
          path: upstream

      - name: Apply Patch
        shell: bash
        run: |
          cd upstream
          git apply ../patch/linkwarden.patch

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: upstream/
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


